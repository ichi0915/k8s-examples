# For the first few questions of this lab, you would have to inspect the existing
# ClusterRoles and ClusterRoleBindings that have been created in this cluster.

# How many ClusterRoles do you see defined in the cluster?
kubectl get clusterroles

# How many ClusterRoleBindings exist on the cluster?
kubectl get clusterrolebindings

# What namespace is the cluster-admin clusterrole part of?
It is a cluster level resource

# What user/groups are the cluster-admin role bound to?
# The ClusterRoleBinding for the role is with the same name.
kubectl describe clusterrolebinding/cluster-admin

# What level of permission does the cluster-admin role grant?
# Inspect the cluster-admin role's privileges.
kubectl describe clusterrole/cluster-admin

# A new user michelle joined the team. She will be focusing on the nodes in the cluster.
# Create the required ClusterRoles and ClusterRoleBindings so she gets access to the nodes.
# vim michelle-role.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: michelle-role
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["*"]
# kubectl apply -f michelle-role.yml

# vim michelle-role-binding.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: michelle-role-binding
subjects:
- kind: User
  name: michelle
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: michelle-role
  apiGroup: rbac.authorization.k8s.io
# kubectl apply -f michelle-role-binding.yml

# Michelle's responsibilities are growing and now she will be responsible for storage as well.
# Create the required ClusterRoles and ClusterRoleBindings to allow her access to Storage.
# Get the API groups and resource names from command kubectl api-resources. Use the given spec:
# vim michelle-role-storage.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: storage-admin
rules:
- apiGroups: [""]
  resources: ["persistentvolumes", "storageclasses"]
  verbs: ["*"]
# kubectl apply -f michelle-role-storage.yml

# vim michelle-role-binding-storage.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: michelle-storage-admin
subjects:
- kind: User
  name: michelle
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: storage-admin
  apiGroup: rbac.authorization.k8s.io
# kubectl apply -f michelle-role-binding-storage.yml

